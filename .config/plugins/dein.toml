# NeoVimのプラグインマネージャー。これないとやばい
[[plugins]]
repo = 'Shougo/dein.vim'

# Lint エンジン。サイドバーの矢印とコメントでチェックしてくれる
[[plugins]]
repo = 'w0rp/ale'

# syntax highter
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua << EOF
require 'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = {},
  },
  indent = {
    enable = false,
    disable = {},
  },
  ensure_installed = {
    "c",
    "cpp",
    "cmake",
    "css",
    "dart",
    "dot",
    "go",
    "gomod",
    "graphql",
    "html",
    "json",
    "java",
    "javascript",
    "kotlin",
    "lua",
    "make",
    "markdown",
    "python",
    "ruby",
    "rust",
    "swift",
    "scss",
    "sql",
    "typescript",
    "tsx",
    "toml",
    "vim",
    "yaml"
  }
}
EOF
'''

# telescopeの依存
[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope-file-browser.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['plenary.nvim', 'telescope-file-browser.nvim']
hook_add = '''
lua << EOF
local status_ok, telescope = pcall(require, 'telescope')

local actions = require('telescope.actions')
local builtin = require('telescope.builtin')
local fb_actions = require "telescope".extensions.file_browser.actions

local function telescope_buffer_dir()
  return vim.fn.expand('%:p:h')
end

telescope.setup {
  defaults = {
    file_ignore_patterns = { "node_modules", ".git/" },
    mappings = {
      n= {
        ["q"] = actions.close,
        ["<C-n>"] = actions.send_selected_to_qflist + actions.open_qflist,
      }
    },
  },
  pickers = {
  },
  extensions = {
    file_browser = {
      theme = "dropdown",
      -- disables netrw and use telescope-file-browser in its place
      hijack_netrw = true,
      mappings = {
        -- your custom insert mode mappings
        ["i"] = {
          ["<C-w>"] = function() vim.cmd('normal vbd') end,
        },
        ["n"] = {
          -- your custom normal mode mappings
          ["n"] = fb_actions.create,
          ["c"] = fb_actions.copy,
          ["r"] = fb_actions.remove,
          ["h"] = fb_actions.goto_parent_dir,
          ["i"] = function()
            vim.cmd('startinsert')
          end
        },
      },
    },
  },
}

telescope.load_extension("file_browser")

vim.keymap.set('n', 'ff',
  function()
    builtin.find_files({
      no_ignore = false,
      hidden = true
    })
  end)
vim.keymap.set('n', 'fg', function()
  builtin.live_grep()
end)
vim.keymap.set('n', 'fb', function()
  builtin.buffers()
end)
vim.keymap.set('n', 'fh', function()
  builtin.help_tags()
end)
vim.keymap.set('n', ';;', function()
  builtin.resume()
end)
vim.keymap.set('n', ';e', function()
  builtin.diagnostics()
end)

vim.keymap.set("n", "<C-e>", function()
  telescope.extensions.file_browser.file_browser({
    path = "%:p:h",
    cwd = telescope_buffer_dir(),
    respect_gitignore = false,
    hidden = true,
    grouped = true,
    previewer = false,
    initial_mode = "normal",
    layout_config = { height = 50 }
  })
end)
EOF
'''

# telescopeで表示するアイコン
[[plugins]]
repo ="kyazdani42/nvim-web-devicons"

# iconのパッケージ
[[plugins]]
repo = 'ryanoasis/vim-devicons'

# 差分を左に-と+で教えてくれる
[[plugins]]
repo = "airblade/vim-gitgutter"

# Gitに関するコマンドを使うことが可能。超便利
[[plugins]]
repo = "tpope/vim-fugitive"

# [[plugins]]
# repo = 'lewis6991/gitsigns.nvim'
# hook_source = '''
# lua << EOF
#   require('gitsigns').setup {}
# EOF
# '''

# 複数行のコメントいける
[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
    vnoremap ? :'<,'>TComment<CR>
'''

# 括弧に色をつけてわかりやすくしてくれる。だいじ
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = '''
    let g:rainbow_active = 1
'''

[[plugins]]
repo = 'folke/tokyonight.nvim'
hook_add = '''
  let g:tokyonight_style = "night"
  let g:tokyonight_italic_functions = 0
  let g:tokyonight_transparent = 1
  let g:tokyonight_transparent_sidebar = 1

  let g:tokyonight_colors = {
    \ 'fg': "#839496",
    \ 'fg_dark': "#586e75",
    \ 'fg_gutter': "#073642",
    \ 'bg_highlight': "#002b36",
    \ 'comment': "#586e75",
    \ 'blue': "#268bd2",
    \ 'cyan': "#2aa198",
    \ 'blue1': "#2ac3de",
    \ 'blue2': "#0db9d7",
    \ 'blue5': "#89ddff",
    \ 'blue6': "#B4F9F8",
    \ 'yellow': "#b58900",
    \ 'orange': "#cb4b16",
    \ 'magenta': "#d33682",
    \ 'purple': "#6c71c4"
  \ }
'''
# repo = 'NLKNguyen/papercolor-theme'

# 簡単に括弧やクオテーションで囲める。超重要
[[plugins]]
repo = 'tpope/vim-surround'

# カッコやクオテーションの自動追加
[[plugins]]
repo = 'jiangmiao/auto-pairs'

# インデントを見やすくする
[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

# snippets
[[plugins]]
repo ='SirVer/ultisnips'
hook_add = '''
   let g:UltiSnipsSnippetDirectories=[$HOME.'/.config/UltiSnips']
   let g:UltiSnipsExpandTrigger       = '<c-k>'
   let g:UltiSnipsJumpForwardTrigger="<c-b>"
   let g:UltiSnipsJumpBackwardTrigger="<c-z>"
 '''

# 特定keywordで画面移動を素早く実行
[[plugins]]
repo ='easymotion/vim-easymotion'
hook_add = '''
  let g:EasyMotion_do_mapping = 0
  nmap qq <Plug>(easymotion-overwin-f)
  nmap qq <Plug>(easymotion-overwin-f2)
  let g:EasyMotion_smartcase = 1
  map <Leader>j <Plug>(easymotion-j)
  map <Leader>k <Plug>(easymotion-k)
 '''

# whitespace検出
[[plugins]]
repo='ntpeters/vim-better-whitespace'

# vim-testの画面を画面下部に出力させるために導入
[[plugins]]
repo = 'tpope/vim-dispatch'
hook_add = '''
let g:dispatch_quickfix_height=30
'''
# test実行を簡単にする
[[plugins]]
repo = 'vim-test/vim-test'
depends = ['vim-dispatch']
hook_add = '''
let g:test#strategy = 'dispatch'
'''

# vim内でターミナル起動
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
	let g:neoterm_autoinsert = 1
	let g:neoterm_autoscroll = 1
	" # let g:neoterm_split_on_tnew = 1
	let g:neoterm_default_mod = "belowright"

  nmap <C-t> :Ttoggle<CR>
  '''
# function等をリストして右側に出してくれる。ファイルの中の関数全部一気に見れるので非常に便利
[[plugins]]
repo = 'liuchengxu/vista.vim'
depends = ['coc.nvim', 'lightline.vim']

# windowのサイズをtmuxのpaneみたいに変更可能
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_start_key = '<C-s>'
'''

[[plugins]]
repo = 'iberianpig/tig-explorer.vim'

# vim でshell起動。主にdlvのUIを整えるため、が目的
[[plugins]]
repo = 'Shougo/vimshell.vim'
