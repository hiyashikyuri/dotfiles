# dein.tomlだけに記述でも問題ないが、起動時に必ず必要ではないファイルを遅延読み込みさせ、
# 起動を早くすることができるようにしている。なので、主に言語に関するやつとかはこっちに記載。多分

# tomlのsyntax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# rubyのsyntac
[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = ['ruby']

# railsのsyntax
[[plugins]]
repo = 'tpope/vim-rails'
on_ft = ['ruby']

[[plugins]]
repo = 'alpaca-tc/vim-endwise.git'
on_ft = ['ruby']
hook_add = '''
  let g:endwise_no_mappings=1
'''

[[plugins]]
repo = 'pangloss/vim-javascript',
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'maxmellon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescript.tsx']

[[plugins]]
repo = 'dart-lang/dart-vim-plugin'
on_ft = ['dart']

[[plugins]]
repo = 'thosakwe/vim-flutter'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']

# prettierの導入。必要な言語は都度導入
[[plugins]]
repo     = 'prettier/vim-prettier'
build    = 'npm install'
on_ft    = ['javascript', 'typescript', 'ruby', 'python', 'css', 'scss', 'json', 'markdown']
hook_source = '''
  " @formatアノテーションを持ったファイルの自動フォーマットを無効にする
  let g:prettier#autoformat = 0

  " Prettierのパースエラーをquickfixに表示しない
  let g:prettier#quickfix_enabled = 0

  autocmd BufWritePre *.js,*.ts,*.rb,*.py,*.css,*.scss,*.json,*.md PrettierAsync
'''


[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
hook_add = '''
  " 保存時に必要なimportを自動的に挿入
  let g:go_fmt_command = "goimports"
  " LSPに任せる機能をOFFにする
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'cmake']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = system("llvm-config --prefix")[:-2] . '/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header = system("llvm-config --prefix")[:-2] . '/lib/clang'
    let g:deoplete#sources#clang#sort_algo = 'priority'
    let g:deoplete#sources#clang#clang_complete_database="./build/"
'''

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'xhtml', 'javascript', 'typescript', 'javascript.jsx', 'typescript.tsx']
hook_add = '''
  let g:closetag_filenames='*.html'
  let g:closetag_xhtml_filenames='*.jsx,*.tsx,*.vue'
  let g:closetag_filetypes='html'
  let g:closetag_xhtml_filetypes='jsx,tsx,javascript.jsx,typescript.tsx,vue'
  let g:closetag_emptyTags_caseSensitive=1
  let g:closetag_shortcut='>'
'''
